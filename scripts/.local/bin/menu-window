#!/usr/bin/env bash

DEPENDENCIES=(wmctrl xprop xrandr)
for DEPENDENCY in "${DEPENDENCIES[@]}"; do
    type -p "$DEPENDENCY" &> /dev/null || {
        echo "error: Could not find '${DEPENDENCY}', is it installed?" >&2
        exit 1
    }
done

declare -A WINDOW_ENTRIES
mapfile -t WINDOW_IDS < <(xprop -root -notype -f _NET_CLIENT_LIST 0c '=$0+\n' _NET_CLIENT_LIST | tr -s "=, " "\n" | tail -n+2)
mapfile -t WORKSPACES < <(xprop -root -notype -f _NET_DESKTOP_NAMES 8u '=$0+\n' _NET_DESKTOP_NAMES | tr -s "=, " "\n" | tail -n+2)
NUM_MONITORS="$(xrandr --current | grep -c ' connected ')"

for IDX in ${!WINDOW_IDS[*]}; do
    # get the window name
    WINDOW_NAME="$(xprop -id "${WINDOW_IDS[$IDX]}" -notype -f _NET_WM_NAME 8u '=$0\n' _NET_WM_NAME | cut -f 2 -d =)"
    if [[ $WINDOW_NAME == '_NET_WM_NAME=""' ]]; then
        WINDOW_NAME="$(xprop -id "${WINDOW_IDS[$IDX]}" -notype -f WM_NAME 8u '=$0\n' WM_NAME | cut -f 2 -d =)"
    fi
    WINDOW_NAME="${WINDOW_NAME:1:-1}"
    # get the workspace the window is in
    WINDOW_WORKSPACE="${WORKSPACES[$(xprop -id "${WINDOW_IDS[$IDX]}" -notype -f _NET_WM_DESKTOP 0c '=$0\n' _NET_WM_DESKTOP | cut -f 2 -d =)]}"
    WINDOW_WORKSPACE="${WINDOW_WORKSPACE:1:-1}"
    # check if we are on a single-display or a multi-display setup
    if [[ $NUM_MONITORS != "1" ]]; then
        # get the monitor the window is in
        WINDOW_DISPLAY="$(display-helper get_display_for_window "${WINDOW_IDS[$IDX]}")"
        # append all this data to the array containing window entries
        WINDOW_ENTRIES["$IDX: [$WINDOW_DISPLAY - $WINDOW_WORKSPACE] $WINDOW_NAME"]="${WINDOW_IDS[$IDX]}"
    else
        WINDOW_ENTRIES["$IDX: [$WINDOW_WORKSPACE] $WINDOW_NAME"]="${WINDOW_IDS[$IDX]}"
    fi
done

SELECTED_WINDOW=$(dmenu-helper custom_menu "-l 5" "   " "$(printf '%s\n' "${!WINDOW_ENTRIES[@]}" | sort -n)")
[ "$SELECTED_WINDOW" != "" ] && wmctrl -ia "${WINDOW_ENTRIES["$SELECTED_WINDOW"]}"
