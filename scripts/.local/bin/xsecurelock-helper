#!/usr/bin/env bash

# A helper script for managing xsecurelock screen locking.

usage() {
    cat << EOF
Usage: $(basename "$0") COMMAND

A helper script for managing xsecurelock screen locking.

Commands:
    start         Start the screen locker daemon.
    lock          Lock the screen immediately.
    -h, --help    Show this help message.
EOF
}

# Global configuration
DEPENDENCIES=(xset xss-lock xsecurelock notificationd)
SCRIPT_PATH="$(readlink -f "$0")"
WALLPAPER_ROOT="$HOME/.local/wallpapers"
TIMEOUT="${XSECURELOCK_SAVER_TIMEOUT:-300}"
NOTIFY_TIME="$((TIMEOUT / 10))"

# Check for required dependencies
check_dependencies() {
    for DEPENDENCY in "${DEPENDENCIES[@]}"; do
        type -p "$DEPENDENCY" &> /dev/null || {
            echo "error: Could not find '${DEPENDENCY}', is it installed?" >&2
            exit 1
        }
    done
}

# Configure screen saver and DPMS settings
configure() {
    xset s "$((TIMEOUT - NOTIFY_TIME))" "$NOTIFY_TIME"
    xset dpms "$((TIMEOUT * 3))" "$((TIMEOUT * 32 / 10))" "$((TIMEOUT * 34 / 10))"
}

# Get a random wallpaper path
get_random_wallpaper() {
    find "$(readlink -f "$WALLPAPER_ROOT")" -iregex '.*.\(jpg\|jpeg\|png\|gif\)' -type f | shuf -n 1
}

# Start the screen locker daemon
start_locker() {
    configure
    xss-lock -n /usr/libexec/xsecurelock/dimmer -l "$SCRIPT_PATH" lock
}

# Lock the screen immediately
lock_screen() {
    # reconfigure, assuming settings were modified outside of this script
    configure
    # pause music player and notifications
    local CURRENT_PLAYER_STATE
    CURRENT_PLAYER_STATE="$(mediactl info '{{status}}')"
    if [ "$CURRENT_PLAYER_STATE" = "Playing" ]; then
        mediactl toggle
    fi
    notificationd pause
    # lock screen (provide random wallpaper while doing so)
    env XSECURELOCK_SAVER_IMAGE="$(get_random_wallpaper)" xsecurelock
    # after unlock, restore playback and notifications
    if [ "$CURRENT_PLAYER_STATE" = "Playing" ]; then
        mediactl toggle
    fi
    notificationd resume
}

# Main entry point
main() {
    check_dependencies

    case "$1" in
        start)
            start_locker
            ;;
        lock)
            lock_screen
            ;;
        -h | --help)
            usage
            ;;
        *)
            usage
            exit 1
            ;;
    esac
}

main "$@"
